package com.cg.healthassist;

import static org.junit.Assert.*;

import javax.persistence.EntityManager;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.cg.healthassist.daoimpl.PatientDAOImpl;
import com.cg.healthassist.model.Patient;

public class PatientDAOImplTest {
	
	private static PatientDAOImpl dao;
	private static EntityManager em;
	
	@BeforeClass
	public static void runOnce() {
		dao = new PatientDAOImpl();
		em = dao.getEntityManager();
	}
	
	/**
	 * Test the persist functionality of patient dao whether it saving the patient inside the database or not.
	 */
	@Test
	public void test_Persist_GivenPatient() {
		Patient patient = new Patient("Chaitanya",21,6382963639L,"Mars","ABC","123");
		dao.persist(patient);
		Patient patientFound = dao.findByPatientId(patient.getPatientId());
		assertEquals(patient.getPatientUserName(), patientFound.getPatientUserName());
	}
	
	/**
	 * Test the find by id method of patient dao given the id of the patient it checks whether the patient is same as what expected.
	 */
	@Test
	public void test1_findByPatientId_GivenPatientId_ShouldReturnPatient() {
		Patient patientFound = dao.findByPatientId(2);
		assertEquals("ABC",patientFound.getPatientUserName());
	}
	
	/**
	 * Test the find by id method of patient dao given the invalid id of the patient it checks whether null is returning or not.
	 */
	@Test
	public void test2_findByPatientId_GivenPatientId_ShouldReturnNull() {
		Patient patientFound = dao.findByPatientId(23);
		assertEquals(null,patientFound);
	}
	
	@Test
	public void test1_removePatient_GivenPatient() {
		Patient patient = new Patient("Chaitanya",21,6382963639L,"Mars","ABC","123");
		patient.setPatientId(3);
		int oldSize = dao.findAll().size();
		dao.removePatient(patient);
		int newSize = dao.findAll().size();
		assertNotEquals(oldSize, newSize);
	}
	
	

}
